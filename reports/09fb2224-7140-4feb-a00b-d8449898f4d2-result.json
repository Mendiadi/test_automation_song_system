{"name": "test_ranked_songs_equal[,0]", "status": "broken", "statusDetails": {"message": "Exception: Test failed. Connection failure.", "trace": "self = <tests.test_songs.TestSongs object at 0x0000011660D4FC50>, setup_songs = None\nsongs = <logic.endpoints.SongsAPI object at 0x0000011660D15290>, rate = ','\n\n    @pytest.mark.dev\n    @pytest.mark.parametrize(\"rate\",\"1,0,2\")\n    def test_ranked_songs_equal(self,setup_songs,songs,rate):\n>       for s in songs.ranked_songs(\"eq\",rate):\n\ntests\\test_songs.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogic\\endpoints.py:178: in ranked_songs\n    r = self._fetch(BaseResponse,self.conn.get,\nlogic\\endpoints.py:34: in _fetch\n    return instance.create_from_response(r)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'logic.db_schemas.BaseResponse'>, response = <Response [500]>\n\n    @classmethod\n    def create_from_response(cls, response):\n        \"\"\"Create instant for the child class generic calls\n            by the response\"\"\"\n        if not response:\n>           raise Exception(\"Test failed. Connection failure.\")\nE           Exception: Test failed. Connection failure.\n\nlogic\\db_schemas.py:37: Exception"}, "steps": [{"name": "getting ranked songs op=eq rate=,", "status": "passed", "start": 1679905101100, "stop": 1679905101108}], "attachments": [{"name": "log", "source": "bfdb56dd-3b17-4cd1-a2cc-b863ecca2535-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "1492b2d2-220a-4368-b251-e2a5f0c22d4a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "rate", "value": "','"}], "start": 1679905101100, "stop": 1679905101108, "uuid": "9fc7237d-07aa-4ed9-a2c7-e1974e22c116", "historyId": "09902e57db3c02a70bef488a8a753eaa", "testCaseId": "fb56294a2938566da613af33ebb5fa85", "fullName": "tests.test_songs.TestSongs#test_ranked_songs_equal", "labels": [{"name": "epic", "value": "songs api"}, {"name": "tag", "value": "dev"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "tag", "value": "songs"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_songs"}, {"name": "subSuite", "value": "TestSongs"}, {"name": "host", "value": "LAP-adim"}, {"name": "thread", "value": "8660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_songs"}]}