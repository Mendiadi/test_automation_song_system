{"name": "test_ranked_songs_invalid_data", "status": "broken", "statusDetails": {"message": "Exception: Test failed. Connection failure.", "trace": "self = <tests.test_songs.TestSongs object at 0x00000282EA0EDED0>\nsongs = <logic.endpoints.SongsAPI object at 0x00000282E9DB99D0>\n\n    @pytest.mark.dev\n    def test_ranked_songs_invalid_data(self,songs):\n        assert list(songs.ranked_songs(\"invalid\",100)) == []\n>       assert list(songs.ranked_songs(\"less\",\"error\")) == []\n\ntests\\test_songs.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogic\\endpoints.py:178: in ranked_songs\n    r = self._fetch(BaseResponse,self.conn.get,\nlogic\\endpoints.py:34: in _fetch\n    return instance.create_from_response(r)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'logic.db_schemas.BaseResponse'>, response = <Response [500]>\n\n    @classmethod\n    def create_from_response(cls, response):\n        \"\"\"Create instant for the child class generic calls\n            by the response\"\"\"\n        if not response:\n>           raise Exception(\"Test failed. Connection failure.\")\nE           Exception: Test failed. Connection failure.\n\nlogic\\db_schemas.py:37: Exception"}, "steps": [{"name": "getting ranked songs op=invalid rate=100", "status": "passed", "start": 1679905857086, "stop": 1679905857096}, {"name": "getting ranked songs op=less rate=error", "status": "passed", "start": 1679905857096, "stop": 1679905857146}], "attachments": [{"name": "log", "source": "3ce05030-fc96-4d0c-b21e-c10da80bf12c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7bf66f2b-b5bc-4f71-b9aa-ae4a19ef0ea2-attachment.txt", "type": "text/plain"}], "start": 1679905857086, "stop": 1679905857146, "uuid": "5f72b302-643d-4772-8e62-3111ec3dec5d", "historyId": "92fd17dd971d9c499892f5ba9f3e0ca9", "testCaseId": "d626d8b1e60a47fda60555b2fe693213", "fullName": "tests.test_songs.TestSongs#test_ranked_songs_invalid_data", "labels": [{"name": "epic", "value": "songs api"}, {"name": "tag", "value": "dev"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "tag", "value": "songs"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_songs"}, {"name": "subSuite", "value": "TestSongs"}, {"name": "host", "value": "LAP-adim"}, {"name": "thread", "value": "14312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_songs"}]}